openapi: 3.0.3
info:
  title: API da aplicação Padel Coimbra
  description: Definição de uma API em OpenAPI de uma aplicação de Padel
  termsOfService: http://swagger.io/terms/
  contact: 
    email: padelcoimbra@padelcoimbra.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs: 
  description: Descobre mais sobre nós
  url: http://swagger.io
servers:
  - url: https://www.localhost:5000/api/v1
    description: Servidor Local
tags: 
  - name: cliente
    description: Dados referentes aos clientes
  - name: instrutor
    description: Dados referentes aos instrutores das aulas de padel
  - name: aula
    description: Dados referentes às aulas de padel
  - name: campo
    description: Dados referentes ao campos de padel
  - name: aluguer
    description: Dados do aluguer do campo

paths:
  /cliente:
    post:
      tags:
        - cliente
      summary: Criar novo cliente
      description: Criar um novo cliente, de acordo com ID
      operationId: CriarCliente
      requestBody:
        description: Dados do cliente 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cliente'
        required: true
      responses:
        '200':
          description: Operação excutada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'          
        '400':
          description: ID inválido
        '500':
          description: Erro a executar o pedido
    get:
      tags:
        - clientes
      summary: Pesquisar clientes 
      description: Pesquisar  por todos os clientes
      parameters:
        - name: clientes
          in: path
          description: todos
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'          
        '422':
          description: Erro de execução
  /cliente/{id}:
    get:
      tags:
        - cliente
      summary: Pesquisar cliente
      description: Pesquisar por um cliente de acordo com o id
      parameters:
        - name: id
          in: path
          description: Id do cliente
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'          
        '400':
          description: ID inválido
        '404':
          description: Cliente não existe
        '422':
          description: Erro de execução

    put:
      tags:
        - cliente
      summary: Atualizar cliente
      description: Atualizar um cliente de acordo com o id
      operationId: AtualizarCliente
      parameters:
        - name: id
          in: path
          description: Id do cliente
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: cliente Atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'          
        '400':
          description: ID inválido
        '404':
          description: Cliente não existe
        '500':
          description: Erro de execução

    delete:
      tags:
        - cliente
      summary: Eliminar cliente
      description: Eliminar um cliente de acordo com o id
      operationId: eliminarCliente
      parameters:
        - name: id
          in: path
          description: ID do cliente a ser eliminado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'  
        '400':
          description: Pedido invalido
        '404':
          description: cliente não encontrado
  /instrutor:
    post:
      tags:
        - instrutor
      summary: Criar novo instrutor
      description: Criar um novo instrutor, de acordo com ID
      operationId: CriarInstrutor
      requestBody:
        description: Dados do instrutor 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instrutor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Instrutor'
        required: true
      responses:
        '200':
          description: Operação excutada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instrutor'          
        '400':
          description: ID inválido
        '500':
          description: Erro a executar o pedido
    get:
      tags:
        - instrutor
      summary: Pesquisar instrutors
      description: Pesquisar  por todos os instrutors
      parameters:
        - name: instrutores
          in: path
          description: todos
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrutor'          
        '422':
          description: Erro de execução
  /instrutor/{id}:
    get:
      tags:
        - instrutor
      summary: Pesquisar instrutor
      description: Pesquisar por um instrutor de acordo com o id
      parameters:
        - name: id
          in: path
          description: Id do instrutor
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrutor'          
        '400':
          description: ID inválido
        '404':
          description: Instrutor não existe
        '422':
          description: Erro de execução
    put:
      tags:
        - instrutor
      summary: Atualizar instrutor
      description: Atualizar um instrutor de acordo com o id
      operationId: AtualizarInstrutor
      parameters:
        - name: id
          in: path
          description: Id do instrutor
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Instrutor Atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrutor'          
        '400':
          description: ID inválido
        '404':
          description: Instrutor não existe
        '500':
          description: Erro de execução

    delete:
      tags:
        - instrutor
      summary: Eliminar instrutor
      description: Eliminar um instrutor de acordo com o id
      operationId: eliminarInstrutor
      parameters:
        - name: id
          in: path
          description: ID do instrutor a ser eliminado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instrutor'  
        '400':
          description: Pedido invalido
        '404':
          description: Instrutor não encontrado

  /aula:
    post:
      tags:
        - aula
      summary: Criar nova aula
      description: Criar uma nova aula, de acordo com ID
      operationId: CriarAula
      requestBody:
        description: Dados da aula 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aula'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Aula'
        required: true
      responses:
        '200':
          description: Operação excutada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aula'          
        '400':
          description: ID inválido
        '500':
          description: Erro a executar o pedido
    get:
      tags:
        - aulas
      summary: Pesquisar aulas
      description: Pesquisar  por todas asos aulas
      parameters:
        - name: aulas
          in: path
          description: todos
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aula'          
        '422':
          description: Erro de execução

    put:
      tags:
        - aula
      summary: Atualizar aula
      description: Atualizar uma aula de acordo com o id
      operationId: AtualizarAula
      parameters:
        - name: id
          in: path
          description: Id da aula
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Aula Atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aula'          
        '400':
          description: ID inválido
        '404':
          description: Aula não existe
        '500':
          description: Erro de execução

    delete:
      tags:
        - aula
      summary: Eliminar aula
      description: Eliminar uma aula de acordo com o id
      operationId: eliminarAula
      parameters:
        - name: id
          in: path
          description: ID da aula a ser eliminado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aula'  
        '400':
          description: Pedido invalido
        '404':
          description: Aula não encontrado
  /campo:
    post:
      tags:
        - campo
      summary: Criar novo campo
      description: Criar um novo campo, de acordo com ID
      operationId: CriarCampo
      requestBody:
        description: Dados do campo 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Campo'
        required: true
      responses:
        '200':
          description: Operação excutada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campo'          
        '400':
          description: ID inválido
        '500':
          description: Erro a executar o pedido
    get:
      tags:
        - campos
      summary: Pesquisar campos
      description: Pesquisar  por todos os campos
      parameters:
        - name: campos
          in: path
          description: todos
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campo'          
        '422':
          description: Erro de execução
    put:
      tags:
        - campo
      summary: Atualizar campo
      description: Atualizar um campo de acordo com o id
      operationId: AtualizarCampo
      parameters:
        - name: id
          in: path
          description: Id do campo
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Campo Atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campo'          
        '400':
          description: ID inválido
        '404':
          description: Campo não existe
        '500':
          description: Erro de execução

    delete:
      tags:
        - campo
      summary: Eliminar campo
      description: Eliminar um campo de acordo com o id
      operationId: eliminarCampo
      parameters:
        - name: id
          in: path
          description: ID do campo a ser eliminado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campo'  
        '400':
          description: Pedido invalido
        '404':
          description: Campo não encontrado
  /aluguer:
    post:
      tags:
        - aluguer
      summary: Criar novo aluguer
      description: Criar um novo aluguer, de acordo com ID
      operationId: CriarAluguer
      requestBody:
        description: Dados do aluguer 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aluguer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Aluguer'
        required: true
      responses:
        '200':
          description: Operação excutada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluguer'          
        '400':
          description: ID inválido
        '500':
          description: Erro a executar o pedido
    get:
      tags:
        - alugueres
      summary: Pesquisar alugueres
      description: Pesquisar  por todos os alugueres
      parameters:
        - name: alugueres
          in: path
          description: todos
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluguer'          
        '422':
          description: Erro de execução
  /aluguer/{id}:
    get:
      tags:
        - aluguer
      summary: Pesquisar aluguer
      description: Pesquisar por um aluguer de acordo com o id
      parameters:
        - name: id
          in: path
          description: Id do aluguer
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluguer'          
        '400':
          description: ID inválido
        '404':
          description: Aluguer não existe
        '422':
          description: Erro de execução
    put:
      tags:
        - aluguer
      summary: Atualizar aluguer
      description: Atualizar um aluguer de acordo com o id
      operationId: AtualizarAluguer
      parameters:
        - name: id
          in: path
          description: Id do aluguer
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Aluguer Atualizado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluguer'          
        '400':
          description: ID inválido
        '404':
          description: Aluguer não existe
        '500':
          description: Erro de execução

    delete:
      tags:
        - instraluguerutor
      summary: Eliminar aluguer
      description: Eliminar um aluguer de acordo com o id
      operationId: eliminarAluguer
      parameters:
        - name: id
          in: path
          description: ID do aluguer a ser eliminado
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluguer'  
        '400':
          description: Pedido invalido
        '404':
          description: Aluguer não encontrado     
components:
  schemas:
    Cliente:
      required:
        - id
        - name
        - age
        - gender
        - address
        - nif
        - phone
        - email
        - registrationdate
        - active
      type: object
      properties:
        id:
          format: int64
          type: integer
          description: Chave primária da entidade do cliente
          example: 1
        name:
          type: string
          description: Nome completo do cliente
          example: João Silva Duarte
        age:
          format: int64
          type: integer
          description: Idade do cliente
          example: 34
        gender:
          type: object
          properties:
            id:
              type: integer
            name:
             type: string
             enum: [male, female, non_binary, other, prefer_not_to_say]
        address:
          type: string
          description: Morada do cliente
          example: Rua X
        nif:
          type: integer
          description: NIF do cliente
          example: 123456789
        phone:
          type: string
          description: Número de telefone do cliente
          example: 912345678
        email: 
          type: string
          description: Email do cliente
          example: João@gmail.com
        registrationdate: 
          type: string
          description: Data de registo do cliente
          example: 10/01/2025
        active:
          type: boolean 
          description: Indica se o cliente tem o registo ativo ou não ativo
          example: true
    Instrutor:
      required:
        - id
        - name
        - age
        - gender
        - address
        - nif
        - phone
        - email
        - specialty
      type: object
      properties:
        id:
          format: int64
          type: integer
          description: Chave primária da entidade do instrutor
          example: 1
        name:
          type: string
          description: Nome completo do instrutor
          example: Manuel Ferreira Silva
        age:
          format: int64
          type: integer
          description: Idade do instrutor
          example: 34
        gender:
          type: object
          properties:
            id:
              type: integer
            name:
             type: string
             enum: [male, female, non_binary, other, prefer_not_to_say]
        address:
          type: string
          description: Morada do instrutor
          example: Rua X
        nif:
          type: integer
          description: NIF do Instrutor
          example: 987654321
        phone:
          type: string
          description: Número de telefone do instrutor
          example: 919806543
        email: 
          type: string
          description: Email doinstrutor
          example: Manuel@gmail.com
        specialty:
         type: string
         description: Especialiade do instrutor
         example: Grau 1
    Campo:
      required:
        - id
        - name
        - type
        - description
        - status
        - priceHour
      properties:
        id:
          format: int64
          type: integer
          description: Chave primária da entidade do campo
          example: 1
        name:
          type: string
          description: Nome completo do campo
          example: Campo 1
        type:
          type: string
          description: Tipo de campo
          example: Interior
        description: 
          type: string
          description: descrição do campo
          example: O campo 2 é uma campo de interior
        status:
         type: string
         description: Estado do campo
         example: Este campo está livre
        priceHour:
         format: int64
         type: integer
         description: Preço por cada hora
         example: 6€
    Aula:
      required:
        - id
        - date
        - hour
        - level
        - classtype
        - participantsmax
        - pricePerson
      properties:
        id:
          format: int64
          type: integer
          description: Chave primária da entidade da aula
          example: 1
        name:
          type: string
          description: Nome da aula
          example: Aula 1
        date:
          format: int64
          type: integer
          description: Data da aula
          example: 20/01/2025
        hour: 
          format: int64
          type: integer
          description: Hora da aula
          example: 17:30h
        level:
         type: string
         description: Nivel da aula
         example: Nivel 1 
        classtype:
         type: string
         description: Tipo de aula
         example: Aula de 2 pessoas
        participantsmax:
         format: int64
         type: integer
         description: Máximo de participantes
         example: 4 pessoas
        pricePerson:
         format: int64
         type: integer
         description: Preço por cliente
         example: 6€
    Aluguer:
      required:
        - id
        - date
        - hour
        - duration
        - price
      properties:
        id:
          format: int64
          type: integer
          description: Chave primária da entidade da aula
          example: 1
        name:
          type: string
          description: Nome da aula
          example: Aula 1
        date:
          format: int64
          type: integer
          description: Data da aula
          example: 20/01/2025
        hour: 
          format: int64
          type: integer
          description: Hora da aula
          example: 17:30h
        duration:
         format: inte64
         type: integer
         description: Tempo de aluguer
         example: 60 minutos
        price:
         format: int64
         type: integer
         description: Preço por cliente
         example: 40€
 
  requestBodies:
    Cliente:
      description: Dados do cliente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cliente'
    Instrutor:
      description: Dados do instrutor
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Instrutor'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://padelcoimbra.swagger.io/oauth/authorize
          scopes:
            write:pets: modify in your account
            read:pets: read 
    api_key:
      type: apiKey
      name: api_key
      in: header